<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Standard_Calculator.MainWindow"
    Title="Calculator         " Height="251" Width="258" Visibility="Visible" Opacity="1" Foreground="{x:Null}" 
        ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen"
        Cursor="Arrow" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="CornflowerBlue" WindowStyle="None" Icon="PresentationResources/Calc32x32.ico" KeyDown="MainWindowDetectKeyDown" PreviewKeyDown="MainWindowPreviewKeyDown" >
    <Window.Resources>
        <!--Control colors.-->
        <Color x:Key="ControlLightColor">#ffff80</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>
        <SolidColorBrush x:Key="CommonButton.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="CommonButton.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="CommonButton.Disabled.Foreground" Color="#FF838383"/>

        <ControlTemplate x:Key="SubMenuControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Opacity="1">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="22" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
                    <RadioButton Style="{DynamicResource {x:Type RadioButton}}"  Grid.Column="0" Margin="3" GroupName="CalcModes" IsChecked="{TemplateBinding IsChecked}" VerticalAlignment="Center" x:Name="GlyphPanel" Visibility="Visible"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup Grid.Column="2" x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Border x:Name="SubMenuBorder" BorderBrush="CornflowerBlue" BorderThickness="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" >
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <!--<Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>-->
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="False">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="RoyalBlue"/>
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#10103d" Offset="1"/>
                                <GradientStop Color="#FF2F1CF1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Navy" Offset="1"/>
                                <GradientStop Color="CornflowerBlue"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="SubMenuRightControlTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Opacity="1">
                <Grid x:Name="Grid" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="22" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" />
                    <RadioButton Style="{DynamicResource {x:Type RadioButton}}"  Grid.Column="0" Margin="2" GroupName="CalcModes" IsChecked="{TemplateBinding IsChecked}" VerticalAlignment="Center" x:Name="GlyphPanel" Visibility="Visible"/>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup Grid.Column="2" x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-22" HorizontalOffset="-1">
                        <Border x:Name="SubMenuBorder" BorderBrush="CornflowerBlue" BorderThickness="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="False">
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="RoyalBlue"/>
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF060329" Offset="1"/>
                                <GradientStop Color="#FF2F1CF1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="Navy" Offset="1"/>
                                <GradientStop Color="CornflowerBlue"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="8"
                  Height="8">
                                    <Ellipse x:Name="Border"
                       StrokeThickness="2">
                                        <Ellipse.Stroke>
                                            <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1" />
                                            </LinearGradientBrush>
                                        </Ellipse.Stroke>
                                        <Ellipse.Fill>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}">
                                            </SolidColorBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SubMenuStyle" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="{TemplateBinding Width}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="MemoryButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#003300" Offset="1"/>
            <GradientStop Color="#80ff80"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="MemoryButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF051D01" Offset="1"/>
            <GradientStop Color="#FF61DA34"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#000088" Offset="0"/>
            <GradientStop Color="#00091a" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.Border.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#002699" Offset="0"/>
            <GradientStop Color="#000d33" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NumericButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF020A4F" Offset="0"/>
            <GradientStop Color="#FF01020F" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ClearButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#800000" Offset="1"/>
            <GradientStop Color="#ff3300"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ClearButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B0105" Offset="1"/>
            <GradientStop Color="#FFFF1100"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.IsMouseOver.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B0314" Offset="1"/>
            <GradientStop Color="#FF521C55"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.Enabled.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF0E010A" Offset="1"/>
            <GradientStop Color="#FF4D093B"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="SpecialButton.Border.Background" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FF1B001B" Offset="1"/>
            <GradientStop Color="#FF340A33"/>
        </LinearGradientBrush>
        <Style x:Key="MemoryButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Height="33" Width="33" BorderBrush="#FF0B470B" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource MemoryButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MemoryButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource MemoryButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NumericButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="{TemplateBinding Height}" Width="33" BorderBrush="{StaticResource NumericButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource NumericButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource NumericButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource NumericButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF004D00" BlurRadius="0" ShadowDepth="3"/>
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="33" Width="33" BorderBrush="#FF5B040B" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource ClearButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ClearButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ClearButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <!--<Setter Property="Effect" TargetName="border">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF004D00" BlurRadius="0" ShadowDepth="3"/>
                                    </Setter.Value>
                                </Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SpecialButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="#FFF7F706"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Height="33" Width="33" BorderBrush="{StaticResource SpecialButton.Border.Background}" BorderThickness="2" SnapsToDevicePixels="true" RenderTransformOrigin="0.625,2.077" Background="{StaticResource SpecialButton.Enabled.Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SpecialButton.IsMouseOver.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource SpecialButton.Enabled.Background}">
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource CommonButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource CommonButton.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource CommonButton.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="WindowManipulationButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" SnapsToDevicePixels="true" BorderThickness="1">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF060329" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="Navy" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF060329" Offset="1"/>
                                            <GradientStop Color="#FF2F1CF1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="CornflowerBlue"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Effect>
        <BlurEffect Radius="0" RenderingBias="Quality"/>
    </Window.Effect>
    <Window.Background>
        <ImageBrush ImageSource="PresentationResources/maxresdefaultBluerised.png" Stretch="UniformToFill"/>
    </Window.Background>

    <Grid x:Name="MainGrid" ShowGridLines="True" Loaded="MainGridLoaded">
        <Menu x:Name="MainMenu" Style="{DynamicResource SubMenuStyle}" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="Auto" Margin="3,3,0,0">
            <MenuItem x:Name="ModeSubMenu" Header="Mode" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Template="{DynamicResource SubMenuControlTemplate}" Height="22" Padding="-6,1,0,1"  BorderThickness="1,1,0,1" SnapsToDevicePixels="False">
                <MenuItem x:Name="StandardMenuItem" Template="{DynamicResource SubMenuControlTemplate}" Header="Standard" HorizontalAlignment="Left" Width="100" Height="22" Margin="0,1,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" IsChecked="True"
                      BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ScientificMenuItem" Header="Scientific" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="22" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ProgrammerMenuItem" Header="Programmer" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="22" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="ThematicSubSubMenu" Template="{DynamicResource SubMenuRightControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="100" Height="22" Padding="-5,1,0,1" Margin="0,0,0,0" BorderThickness="1,0,1,1"  SnapsToDevicePixels="False" IsCheckable="True" Click="ThematicSubSubMenu_OnClick" StaysOpenOnClick="True" LostFocus="ThematicSubMenuLostFocus">
                    <MenuItem x:Name="EconomicsMenuItem" Header="Economics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="0,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="StatisticsMenuItem" Header="Statistics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="AstronomyMenuItem" Header="Astronomy" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="TrigonometryMenuItem" Header="Trigonometry" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="22" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,0" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="ElectronicsMenuItem" Header="Electronics" Template="{DynamicResource SubMenuControlTemplate}" Width="100" Height="21" Margin="99,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,1,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Width="73">
                            <TextBlock Text="Thematic"/>
                            <Image Source="PresentationResources/arrow-little.png"
                   Height="10" Margin="5,0,0,0"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <MenuItem x:Name="UnitConversionsMenuItem" Header="Conversions" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="100" Height="21" Margin="0" Padding="-5,1,0,0" IsCheckable="True" Click ="ModeSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="ViewSubMenu" Header="View" Template="{DynamicResource SubMenuControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Padding="-6,1,0,1" Margin="0,0,0,0" BorderThickness="0,1,0,1"  SnapsToDevicePixels="False">
                <MenuItem x:Name="ThemesSubMenu" Template="{DynamicResource SubMenuRightControlTemplate}" HorizontalAlignment="Left" Width="80" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" IsCheckable="True" BorderThickness="1,1,1,1" Background="{x:Null}" Click="ThemesMenuItem_OnClickhemesSubSubMenu_OnClick" StaysOpenOnClick="True" LostFocus="ThemesSubMenuLostFocus">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Themes"/>
                            <Image Source="E:\My Applications\Standard Calculator\Standard Calculator\PresentationResources\arrow-little.png"
                   Height="10" Margin="0,0,0,0"/>
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem x:Name="AeroThemeMenuItem" Header="Aero" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,1,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,1,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="OpalThemeMenuItem" Header="Opal" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="AquaThemeMenuItem" Header="Aqua" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="ClassicThemeMenuItem" Header="Classic" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="22" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top">
                    </MenuItem>
                    <MenuItem x:Name="DigitEraThemeMenuItem" Header="Digit Era" Template="{DynamicResource SubMenuControlTemplate}" Width="70" Height="21" Margin="79,0,0,0" Padding="-5,1,0,0" IsCheckable="True" Click ="ViewSubMenuItemClick" BorderThickness="1,0,1,1" Background="{x:Null}" VerticalContentAlignment="Top" IsChecked="True">
                    </MenuItem>
                </MenuItem>
            </MenuItem>
            <MenuItem x:Name="HelpSubMenu" Header="Help" Template="{DynamicResource SubMenuControlTemplate}" Foreground="#FF64FFFF" FontSize="12" FontWeight="Bold" Width="60" Padding="-5,1,0,1" Margin="0,0,0,0" BorderThickness="0,1,1,1" SnapsToDevicePixels="False">
                <MenuItem x:Name="AboutMenuItem" Header="About" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="TutorialMenuItem" Header="Tutorial" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="22" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
                <MenuItem x:Name="LinksMenuItem" Header="Links" Template="{DynamicResource SubMenuControlTemplate}" HorizontalAlignment="Left" Width="70" Height="21" Margin="1,0,0,0" Padding="-5,1,0,0" BorderThickness="1,0,1,1" Background="{x:Null}">
                </MenuItem>
            </MenuItem>
        </Menu>
        <StackPanel HorizontalAlignment="Left" Height="66" VerticalAlignment="Top" Width="250" RenderTransformOrigin="0.66,0.8" Margin="3,30,0,0" Background="#FF020217" Opacity="0.9" Grid.ColumnSpan="2">
            <RichTextBox x:Name="InputField" Opacity="0.9" BorderBrush="#FF3399FF" Background="{x:Null}" SelectionBrush="#FF107415" FontStyle="Italic" Foreground="#FFF9EE00" RenderTransformOrigin="0.753,-0.278" Height="33" BorderThickness="1,1,1,0" FontFamily="Microsoft Sans Serif" FontSize="14"/>
            <RichTextBox x:Name="OutputField" Opacity="0.9" BorderBrush="#FF3399FF" Background="{x:Null}" SelectionBrush="#FF107415" Foreground="#FFF9EE00" RenderTransformOrigin="0.753,-0.278" Height="33" BorderThickness="1,0,1,1" FontSize="14" FontFamily="Microsoft Sans Serif" >
                <FlowDocument TextAlignment="Right"/>
            </RichTextBox>
        </StackPanel>
        <Grid Grid.Column="0" HorizontalAlignment="Left" Height="147" VerticalAlignment="Top" Width="140" Margin="2,100,0,0" Opacity="0.9">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF0F084F"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
            </Grid.ColumnDefinitions>
            <!-- MemoryButtons-->
            <Button x:Name="AddToMemoryButton" Grid.Row="0" Grid.Column="0" Content="M+" Style="{DynamicResource MemoryButtonStyle}" Height="33"  FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="SubtractFromMemoryButton" Grid.Row="0" Grid.Column="1" Content="M-" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="RestoreFromMemoryButton" Grid.Row="0" Grid.Column="2" Content="MR" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" HorizontalAlignment="Right" Width="35" Click="ButtonClick">
            </Button>
            <Button x:Name="ClearFromMemoryButton" Grid.Row="0" Grid.Column="3" Content="MC" Style="{DynamicResource MemoryButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>

            <!--Separator-->
            <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" Name="LeftPadSeparator" Width="130" Height="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,3,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF382A04" Offset="1"/>
                        <GradientStop Color="#FFD2E60E"/>
                    </LinearGradientBrush>
                </StackPanel.Background>

            </StackPanel>

            <!--Numeric Buttons-->
            <Button x:Name="One1DigitButton" Grid.Row="2" Grid.Column="0" Content="1"  Height="33" Style="{DynamicResource NumericButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick"/>
            <Button x:Name="Two2DigitButton" Grid.Row="2" Grid.Column="1" Content="2"  Style="{DynamicResource NumericButtonStyle}" Height="33"  FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Three3DigitButton" Grid.Row="2" Grid.Column="2" Content="3"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Four4DigitButton" Grid.Row="3" Grid.Column="0" Content="4"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Five5DigitButton" Grid.Row="3" Grid.Column="1" Content="5"  Style="{DynamicResource NumericButtonStyle}" Height="33"   FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Six6DigitButton" Grid.Row="3" Grid.Column="2" Content="6"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Seven7DigitButton" Grid.Row="4" Grid.Column="0" Content="7"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Eight8DigitButton" Grid.Row="4" Grid.Column="1" Content="8"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="Nine9DigitButton" Grid.Row="4" Grid.Column="2" Content="9"  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="DecimalPointDigitButton" Grid.Row="4" Grid.Column="3" Content="."  Style="{DynamicResource NumericButtonStyle}" Height="33" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>
            <Button x:Name="EqualsButton" Style="{DynamicResource SpecialButtonStyle}" Grid.Row="2" Grid.Column="3" Content="=" Margin="0,1" FontWeight="Bold" Foreground="#FFE4C814" BorderThickness="2" Click="ButtonClick">
            </Button>
            <Button x:Name="Zero0DigitButton" Grid.Row="3" Grid.Column="3" Content="0" Height="33" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" FontWeight="Bold" BorderBrush="{x:Null}" Background="{x:Null}" Click="ButtonClick">
            </Button>
        </Grid>

        <StackPanel Name="SeparatorBetweenNumericAndOperationPad" Width="1" VerticalAlignment="Bottom" Height="136" Margin="35,4,0,7">
            <StackPanel.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF382A04" Offset="1"/>
                    <GradientStop Color="#FFD2E60E"/>
                </LinearGradientBrush>
            </StackPanel.Background>
        </StackPanel>
        <Grid HorizontalAlignment="Left" Height="147" VerticalAlignment="Top" Width="105" Margin="149,100,0,0"
              Grid.Column="0" Opacity="0.9">
            <Grid.RowDefinitions>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="7*"/>
                <RowDefinition Height="22*"/>
                <RowDefinition Height="13*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
                <ColumnDefinition Width="35*"/>
            </Grid.ColumnDefinitions>
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="1"/>
                    <GradientStop Color="#FF0F084F"/>
                </LinearGradientBrush>
            </Grid.Background>
            <!-- ClearButtons-->
            <Button x:Name="ClearAllButton" Grid.Row="0" Grid.Column="0" Content="C" Style="{DynamicResource ClearButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick">
            </Button>
            <Button x:Name="ClearLastAllButton" Grid.Row="0" Grid.Column="1" Content="CE" Style="{DynamicResource ClearButtonStyle}" FontWeight="Bold" Margin="0,1" Click="ButtonClick">
            </Button>

            <!--SpecailButton-->
            <Button x:Name="DeleteSpecialButton" Grid.Row="0" Grid.Column="2" Content="⬅" Style="{DynamicResource SpecialButtonStyle}" FontWeight="Bold" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonClick">
            </Button>

            <!--Separator-->
            <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Name="RightPadSeparator" Width="95" Height="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="5,3,0,0">
                <StackPanel.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF382A04" Offset="1"/>
                        <GradientStop Color="#FFD2E60E"/>
                    </LinearGradientBrush>
                </StackPanel.Background>
            </StackPanel>


            <!--Operations Buttons-->
            <Button x:Name="AddOperationButton" Grid.Row="2" Grid.Column="0" Content="+" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Grid.RowSpan="2" Click="ButtonClick"/>
            <Button x:Name="SubtractOperationButton" Grid.Row="2" Grid.Column="1" Content="–" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Grid.RowSpan="2" Click="ButtonClick"/>
            <Button x:Name="ChangeSignOperationButton" Grid.Row="2" Grid.Column="2" Content="±" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Grid.RowSpan="2" Click="ButtonClick"/>
            <Button x:Name="MultiplyOperationButton" Grid.Row="4" Grid.Column="0" Content="*" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" FontSize="14" Click="ButtonClick"/>
            <Button x:Name="DivideOperationButton" Grid.Row="4" Grid.Column="1" Content="/" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="ModOperationButton" Grid.Row="4" Grid.Column="2" Content="%" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="PowerOperationButton" Grid.Row="5" Grid.Column="0" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonWithSuperscriptedTextClick">
                <TextBlock>
                    <Run>x</Run>
                    <Run Typography.Variants="Superscript">2</Run>
                </TextBlock>
            </Button>
            <Button x:Name="SquareRootOperationButton" Grid.Row="5" Grid.Column="1" Content="√" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
            <Button x:Name="ReciprocalOperationButton" Grid.Row="5" Grid.Column="2" Content="1/x" Style="{DynamicResource NumericButtonStyle}" Margin="0,1" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Click="ButtonClick"/>
        </Grid>
        
        <Button x:Name="MinimizeButton" Content="__" HorizontalAlignment="Left" VerticalAlignment="Top" Width="20" Height="20" BorderBrush="RoyalBlue" Margin="210,3,0,0" Foreground="#FF64FFFF" FontWeight="Bold" RenderTransformOrigin="-0.95,0.55" Padding="1,-4,1,0" Style="{DynamicResource WindowManipulationButton}" Click="MinimizeButtonClick">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF060329" Offset="1"/>
                    <GradientStop Color="#FF2F1CF1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        
        <Button x:Name="CloseButton" Content="x" HorizontalAlignment="Left" VerticalAlignment="Top" Width="20" Height="20" BorderBrush="RoyalBlue" Margin="232,3,0,0" Foreground="#FF64FFFF" FontWeight="Bold" RenderTransformOrigin="-0.95,0.55" Padding="1,-4,1,0" Style="{DynamicResource WindowManipulationButton}" Click="CloseButtonClick">
            <Button.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF060329" Offset="1"/>
                    <GradientStop Color="#FF2F1CF1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
    </Grid>
</Window>
